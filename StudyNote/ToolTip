프로그램 실행에 직접 인자 전달(args: Array<String>) 사용법
Run > Edit Configurations 에서 인자 추가
클래스 충돌 방지(import.com.example.edu as User) // "as" 사용

val - 읽기전용 / var - 중간에 쓰기 가능
데이터 추상화 - 자료형만 선언해 둠
추론된 자료형 확인하기 = Ctrl + Shift + P
부호있는 정수 자료형 > Long, Int, Short, Byte
부호없는 정수 자료형 > ULong(~uL),UInt(~u),UShort(~u),UByte(~u) //Unsigned
실수 자료형 - Double,Float(F)
부동소수점(floating point) - E-2,e2 등
논리 - Boolean, 문자 - char // C 처럼 직접 숫자를 대입해 선언할 수 없음(선언 시에만), toChar()메소드 사용

문자열에 $, 표현식 사용하기
val s1 = "a is %a"
val s1 = "a is ${a+3}";

문자열 안에 큰따옴표,$ 표현하기 - 이스케이프 문자 \ 
형식화된 다중 문자열 사용하기 """ ~ """
Typedef사용하기 - typealias

※NPE
null 할당하기 - ? 사용(String?)
?사용한 자료형 호출하기 - 세이프 콜과 not-null단정 기호
세이프 콜 - 호출할 변수 이름 뒤에 ?. 붙임 //println("str1: $str1 length: ${str1?.length}")
not-null 단정 기호(!!.) - 컴파일러가 null을 검사하지 않음 > 강제 NPE 발생
